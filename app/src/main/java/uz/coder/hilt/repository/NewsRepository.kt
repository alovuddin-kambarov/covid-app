package uz.coder.hilt.repositoryimport kotlinx.coroutines.flow.flowimport uz.coder.hilt.database.dao.NewsDaoimport uz.coder.hilt.database.entity.NewsEntityimport uz.coder.hilt.nerworking.ApiServiceimport javax.inject.Injectimport javax.inject.Singleton@Singletonclass NewsRepository @Inject constructor(    private val apiService: ApiService,    private val newsDao: NewsDao) {    suspend fun getNewsFromApi() = flow { emit(apiService.getNews()) }    suspend fun insertNewsToDb(list: List<NewsEntity>) = newsDao.insertNews(list)    suspend fun getDbNews() = newsDao.getNews()    fun getSavedNews() = newsDao.getSavedNews()    suspend fun insertSavedNews(url:String) = flow { emit(newsDao.insertSavedNews(url)) }}